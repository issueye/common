// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: client.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 空数据
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

// 返回
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`     // 版本号
	AppName   string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`     // 程序名称
	GitHash   string `protobuf:"bytes,3,opt,name=gitHash,proto3" json:"gitHash,omitempty"`     // git hash
	GitBranch string `protobuf:"bytes,4,opt,name=gitBranch,proto3" json:"gitBranch,omitempty"` // git 分支
	BuildTime string `protobuf:"bytes,5,opt,name=buildTime,proto3" json:"buildTime,omitempty"` // 构建时间
	Goos      string `protobuf:"bytes,6,opt,name=goos,proto3" json:"goos,omitempty"`           // 操作系统
	GoVersion string `protobuf:"bytes,7,opt,name=goVersion,proto3" json:"goVersion,omitempty"` // go 版本
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionResponse) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *VersionResponse) GetGitHash() string {
	if x != nil {
		return x.GitHash
	}
	return ""
}

func (x *VersionResponse) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *VersionResponse) GetBuildTime() string {
	if x != nil {
		return x.BuildTime
	}
	return ""
}

func (x *VersionResponse) GetGoos() string {
	if x != nil {
		return x.Goos
	}
	return ""
}

func (x *VersionResponse) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

// 心跳
type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory float32 `protobuf:"fixed32,3,opt,name=memory,proto3" json:"memory,omitempty"` // 内存使用情况
	Cpu    float32 `protobuf:"fixed32,4,opt,name=cpu,proto3" json:"cpu,omitempty"`       // CPU使用情况
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatResponse) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *HeartbeatResponse) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

type ClientInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // 名称
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"` // 标题
	Host  string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`   // 主机
	Os    uint32 `protobuf:"varint,4,opt,name=os,proto3" json:"os,omitempty"`      // 操作系统 0 windows 1 linux
	Ip    string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`       // IP地址
}

func (x *ClientInfoRequest) Reset() {
	*x = ClientInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfoRequest) ProtoMessage() {}

func (x *ClientInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfoRequest.ProtoReflect.Descriptor instead.
func (*ClientInfoRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *ClientInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClientInfoRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ClientInfoRequest) GetOs() uint32 {
	if x != nil {
		return x.Os
	}
	return 0
}

func (x *ClientInfoRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ClientInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` // 客户端ID
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`       // token
}

func (x *ClientInfoResponse) Reset() {
	*x = ClientInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfoResponse) ProtoMessage() {}

func (x *ClientInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfoResponse.ProtoReflect.Descriptor instead.
func (*ClientInfoResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *ClientInfoResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ClientInfoResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ClientPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` // 客户端ID
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`        // 端口号
}

func (x *ClientPortRequest) Reset() {
	*x = ClientPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientPortRequest) ProtoMessage() {}

func (x *ClientPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientPortRequest.ProtoReflect.Descriptor instead.
func (*ClientPortRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *ClientPortRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ClientPortRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PrintVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` // 版本号
}

func (x *PrintVersionResponse) Reset() {
	*x = PrintVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintVersionResponse) ProtoMessage() {}

func (x *PrintVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintVersionResponse.ProtoReflect.Descriptor instead.
func (*PrintVersionResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{6}
}

func (x *PrintVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type PrintUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 服务二进制数据
}

func (x *PrintUpdateRequest) Reset() {
	*x = PrintUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintUpdateRequest) ProtoMessage() {}

func (x *PrintUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintUpdateRequest.ProtoReflect.Descriptor instead.
func (*PrintUpdateRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7}
}

func (x *PrintUpdateRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PrintDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 打印数据
}

func (x *PrintDataRequest) Reset() {
	*x = PrintDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintDataRequest) ProtoMessage() {}

func (x *PrintDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintDataRequest.ProtoReflect.Descriptor instead.
func (*PrintDataRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{8}
}

func (x *PrintDataRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xcd,
	0x01, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x6f, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3d,
	0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x70, 0x75, 0x22, 0x71, 0x0a,
	0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x22, 0x46, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x30, 0x0a,
	0x14, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x28, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x32, 0x88, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x70,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x88, 0x03, 0x0a,
	0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x2e, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x33, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_client_proto_goTypes = []interface{}{
	(*Empty)(nil),                // 0: proto.Empty
	(*VersionResponse)(nil),      // 1: proto.VersionResponse
	(*HeartbeatResponse)(nil),    // 2: proto.HeartbeatResponse
	(*ClientInfoRequest)(nil),    // 3: proto.ClientInfoRequest
	(*ClientInfoResponse)(nil),   // 4: proto.ClientInfoResponse
	(*ClientPortRequest)(nil),    // 5: proto.ClientPortRequest
	(*PrintVersionResponse)(nil), // 6: proto.PrintVersionResponse
	(*PrintUpdateRequest)(nil),   // 7: proto.PrintUpdateRequest
	(*PrintDataRequest)(nil),     // 8: proto.PrintDataRequest
}
var file_client_proto_depIdxs = []int32{
	3, // 0: proto.ClientHelper.CheckClient:input_type -> proto.ClientInfoRequest
	5, // 1: proto.ClientHelper.ClientPort:input_type -> proto.ClientPortRequest
	0, // 2: proto.ClientServiceHelper.RestartPrint:input_type -> proto.Empty
	8, // 3: proto.ClientServiceHelper.Print:input_type -> proto.PrintDataRequest
	7, // 4: proto.ClientServiceHelper.PrintUpdate:input_type -> proto.PrintUpdateRequest
	0, // 5: proto.ClientServiceHelper.PrintVersion:input_type -> proto.Empty
	8, // 6: proto.ClientServiceHelper.PrintUpdateConfig:input_type -> proto.PrintDataRequest
	0, // 7: proto.ClientServiceHelper.Heartbeat:input_type -> proto.Empty
	0, // 8: proto.ClientServiceHelper.Version:input_type -> proto.Empty
	4, // 9: proto.ClientHelper.CheckClient:output_type -> proto.ClientInfoResponse
	0, // 10: proto.ClientHelper.ClientPort:output_type -> proto.Empty
	0, // 11: proto.ClientServiceHelper.RestartPrint:output_type -> proto.Empty
	0, // 12: proto.ClientServiceHelper.Print:output_type -> proto.Empty
	0, // 13: proto.ClientServiceHelper.PrintUpdate:output_type -> proto.Empty
	6, // 14: proto.ClientServiceHelper.PrintVersion:output_type -> proto.PrintVersionResponse
	0, // 15: proto.ClientServiceHelper.PrintUpdateConfig:output_type -> proto.Empty
	2, // 16: proto.ClientServiceHelper.Heartbeat:output_type -> proto.HeartbeatResponse
	1, // 17: proto.ClientServiceHelper.Version:output_type -> proto.VersionResponse
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClientHelperClient is the client API for ClientHelper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientHelperClient interface {
	// 检查
	CheckClient(ctx context.Context, in *ClientInfoRequest, opts ...grpc.CallOption) (*ClientInfoResponse, error)
	// 客户端端口
	ClientPort(ctx context.Context, in *ClientPortRequest, opts ...grpc.CallOption) (*Empty, error)
}

type clientHelperClient struct {
	cc grpc.ClientConnInterface
}

func NewClientHelperClient(cc grpc.ClientConnInterface) ClientHelperClient {
	return &clientHelperClient{cc}
}

func (c *clientHelperClient) CheckClient(ctx context.Context, in *ClientInfoRequest, opts ...grpc.CallOption) (*ClientInfoResponse, error) {
	out := new(ClientInfoResponse)
	err := c.cc.Invoke(ctx, "/proto.ClientHelper/CheckClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientHelperClient) ClientPort(ctx context.Context, in *ClientPortRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ClientHelper/ClientPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientHelperServer is the server API for ClientHelper service.
type ClientHelperServer interface {
	// 检查
	CheckClient(context.Context, *ClientInfoRequest) (*ClientInfoResponse, error)
	// 客户端端口
	ClientPort(context.Context, *ClientPortRequest) (*Empty, error)
}

// UnimplementedClientHelperServer can be embedded to have forward compatible implementations.
type UnimplementedClientHelperServer struct {
}

func (*UnimplementedClientHelperServer) CheckClient(context.Context, *ClientInfoRequest) (*ClientInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckClient not implemented")
}
func (*UnimplementedClientHelperServer) ClientPort(context.Context, *ClientPortRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientPort not implemented")
}

func RegisterClientHelperServer(s *grpc.Server, srv ClientHelperServer) {
	s.RegisterService(&_ClientHelper_serviceDesc, srv)
}

func _ClientHelper_CheckClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientHelperServer).CheckClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientHelper/CheckClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientHelperServer).CheckClient(ctx, req.(*ClientInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientHelper_ClientPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientHelperServer).ClientPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientHelper/ClientPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientHelperServer).ClientPort(ctx, req.(*ClientPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientHelper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ClientHelper",
	HandlerType: (*ClientHelperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckClient",
			Handler:    _ClientHelper_CheckClient_Handler,
		},
		{
			MethodName: "ClientPort",
			Handler:    _ClientHelper_ClientPort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "client.proto",
}

// ClientServiceHelperClient is the client API for ClientServiceHelper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientServiceHelperClient interface {
	// 重启打印服务
	RestartPrint(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	// 打印文件
	Print(ctx context.Context, in *PrintDataRequest, opts ...grpc.CallOption) (*Empty, error)
	// 更新打印服务
	PrintUpdate(ctx context.Context, opts ...grpc.CallOption) (ClientServiceHelper_PrintUpdateClient, error)
	// 打印服务版本
	PrintVersion(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PrintVersionResponse, error)
	// 更新打印服务配置文件
	PrintUpdateConfig(ctx context.Context, in *PrintDataRequest, opts ...grpc.CallOption) (*Empty, error)
	// 心跳
	Heartbeat(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HeartbeatResponse, error)
	// 获取版本号
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error)
}

type clientServiceHelperClient struct {
	cc grpc.ClientConnInterface
}

func NewClientServiceHelperClient(cc grpc.ClientConnInterface) ClientServiceHelperClient {
	return &clientServiceHelperClient{cc}
}

func (c *clientServiceHelperClient) RestartPrint(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ClientServiceHelper/RestartPrint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceHelperClient) Print(ctx context.Context, in *PrintDataRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ClientServiceHelper/Print", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceHelperClient) PrintUpdate(ctx context.Context, opts ...grpc.CallOption) (ClientServiceHelper_PrintUpdateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientServiceHelper_serviceDesc.Streams[0], "/proto.ClientServiceHelper/PrintUpdate", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientServiceHelperPrintUpdateClient{stream}
	return x, nil
}

type ClientServiceHelper_PrintUpdateClient interface {
	Send(*PrintUpdateRequest) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type clientServiceHelperPrintUpdateClient struct {
	grpc.ClientStream
}

func (x *clientServiceHelperPrintUpdateClient) Send(m *PrintUpdateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *clientServiceHelperPrintUpdateClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *clientServiceHelperClient) PrintVersion(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PrintVersionResponse, error) {
	out := new(PrintVersionResponse)
	err := c.cc.Invoke(ctx, "/proto.ClientServiceHelper/PrintVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceHelperClient) PrintUpdateConfig(ctx context.Context, in *PrintDataRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ClientServiceHelper/PrintUpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceHelperClient) Heartbeat(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/proto.ClientServiceHelper/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceHelperClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/proto.ClientServiceHelper/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientServiceHelperServer is the server API for ClientServiceHelper service.
type ClientServiceHelperServer interface {
	// 重启打印服务
	RestartPrint(context.Context, *Empty) (*Empty, error)
	// 打印文件
	Print(context.Context, *PrintDataRequest) (*Empty, error)
	// 更新打印服务
	PrintUpdate(ClientServiceHelper_PrintUpdateServer) error
	// 打印服务版本
	PrintVersion(context.Context, *Empty) (*PrintVersionResponse, error)
	// 更新打印服务配置文件
	PrintUpdateConfig(context.Context, *PrintDataRequest) (*Empty, error)
	// 心跳
	Heartbeat(context.Context, *Empty) (*HeartbeatResponse, error)
	// 获取版本号
	Version(context.Context, *Empty) (*VersionResponse, error)
}

// UnimplementedClientServiceHelperServer can be embedded to have forward compatible implementations.
type UnimplementedClientServiceHelperServer struct {
}

func (*UnimplementedClientServiceHelperServer) RestartPrint(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartPrint not implemented")
}
func (*UnimplementedClientServiceHelperServer) Print(context.Context, *PrintDataRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Print not implemented")
}
func (*UnimplementedClientServiceHelperServer) PrintUpdate(ClientServiceHelper_PrintUpdateServer) error {
	return status.Errorf(codes.Unimplemented, "method PrintUpdate not implemented")
}
func (*UnimplementedClientServiceHelperServer) PrintVersion(context.Context, *Empty) (*PrintVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrintVersion not implemented")
}
func (*UnimplementedClientServiceHelperServer) PrintUpdateConfig(context.Context, *PrintDataRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrintUpdateConfig not implemented")
}
func (*UnimplementedClientServiceHelperServer) Heartbeat(context.Context, *Empty) (*HeartbeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedClientServiceHelperServer) Version(context.Context, *Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}

func RegisterClientServiceHelperServer(s *grpc.Server, srv ClientServiceHelperServer) {
	s.RegisterService(&_ClientServiceHelper_serviceDesc, srv)
}

func _ClientServiceHelper_RestartPrint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceHelperServer).RestartPrint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientServiceHelper/RestartPrint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceHelperServer).RestartPrint(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientServiceHelper_Print_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrintDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceHelperServer).Print(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientServiceHelper/Print",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceHelperServer).Print(ctx, req.(*PrintDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientServiceHelper_PrintUpdate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ClientServiceHelperServer).PrintUpdate(&clientServiceHelperPrintUpdateServer{stream})
}

type ClientServiceHelper_PrintUpdateServer interface {
	SendAndClose(*Empty) error
	Recv() (*PrintUpdateRequest, error)
	grpc.ServerStream
}

type clientServiceHelperPrintUpdateServer struct {
	grpc.ServerStream
}

func (x *clientServiceHelperPrintUpdateServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *clientServiceHelperPrintUpdateServer) Recv() (*PrintUpdateRequest, error) {
	m := new(PrintUpdateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ClientServiceHelper_PrintVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceHelperServer).PrintVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientServiceHelper/PrintVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceHelperServer).PrintVersion(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientServiceHelper_PrintUpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrintDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceHelperServer).PrintUpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientServiceHelper/PrintUpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceHelperServer).PrintUpdateConfig(ctx, req.(*PrintDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientServiceHelper_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceHelperServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientServiceHelper/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceHelperServer).Heartbeat(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientServiceHelper_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceHelperServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientServiceHelper/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceHelperServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientServiceHelper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ClientServiceHelper",
	HandlerType: (*ClientServiceHelperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RestartPrint",
			Handler:    _ClientServiceHelper_RestartPrint_Handler,
		},
		{
			MethodName: "Print",
			Handler:    _ClientServiceHelper_Print_Handler,
		},
		{
			MethodName: "PrintVersion",
			Handler:    _ClientServiceHelper_PrintVersion_Handler,
		},
		{
			MethodName: "PrintUpdateConfig",
			Handler:    _ClientServiceHelper_PrintUpdateConfig_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _ClientServiceHelper_Heartbeat_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _ClientServiceHelper_Version_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrintUpdate",
			Handler:       _ClientServiceHelper_PrintUpdate_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "client.proto",
}
